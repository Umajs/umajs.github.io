"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[486],{394:(s,n,a)=>{a.r(n),a.d(n,{default:()=>b});var l=a(4386);const p=(0,l.uE)('<h1 id="中间件-middleware" tabindex="-1"><a class="header-anchor" href="#中间件-middleware" aria-hidden="true">#</a> 中间件（Middleware）</h1><p>Uma 基于 Koa2，兼容 middleware。在已有中间件的基础上提供两种使用形式：插件形式、AOP 形式。</p><h2 id="插件形式" tabindex="-1"><a class="header-anchor" href="#插件形式" aria-hidden="true">#</a> 插件形式</h2><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3>',4),e=(0,l._)("code",null,"Uma",-1),o=(0,l.Uk)(" 的插件机制很大部分是借用了 "),r=(0,l._)("code",null,"Koa",-1),c=(0,l.Uk)(" 的中间件，通过插件来使用中间件更易于开发和维护，请尽量用插件形式来使用中间件，插件开发和使用请参阅 "),t=(0,l.Uk)("Plugin 参考文档"),i=(0,l.uE)('<h3 id="其它" tabindex="-1"><a class="header-anchor" href="#其它" aria-hidden="true">#</a> 其它</h3><p>为了方便插件使用已发布的中间件，插件配置（plugin.config.ts）可以配置中间件便捷使用，配置如下</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// types</span></span>\n<span class="line"><span style="color:#C9D1D9;">[middlewareName: string]: {</span></span>\n<span class="line"><span style="color:#C9D1D9;">    type: </span><span style="color:#A5D6FF;">&#39;middleware&#39;</span><span style="color:#C9D1D9;">,         </span><span style="color:#8B949E;">// 仅在使用中间件的时候配置 type</span></span>\n<span class="line"><span style="color:#C9D1D9;">    handler: Koa.Middleware,</span></span>\n<span class="line"><span style="color:#C9D1D9;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// plugin.config.ts</span></span>\n<span class="line"><span style="color:#8B949E;">// 基于 koa-views 配置模板中间件</span></span>\n<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">as</span><span style="color:#C9D1D9;"> views </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;koa-views&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">view: {</span></span>\n<span class="line"><span style="color:#C9D1D9;">    type: </span><span style="color:#A5D6FF;">&#39;middleware&#39;</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">    handler: </span><span style="color:#D2A8FF;">views</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;./views&#39;</span><span style="color:#C9D1D9;">, {</span></span>\n<span class="line"><span style="color:#C9D1D9;">      map: { html: </span><span style="color:#A5D6FF;">&#39;nunjucks&#39;</span><span style="color:#C9D1D9;"> },</span></span>\n<span class="line"><span style="color:#C9D1D9;">    }),</span></span>\n<span class="line"><span style="color:#C9D1D9;">  }</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',4),F=(0,l.Uk)("请不要在插件配置（ plugin.config.ts ）中进行中间件的开发，让插件的配置更加纯粹。如需要请使用插件开发。"),y=(0,l.Uk)("Plugin 参考文档"),D=(0,l.Uk)("如果要动态的加载中间件，请使用复合插件形式。"),u=(0,l.Uk)("Plugin 参考文档"),m=(0,l.uE)('<h2 id="aop-装饰器形式" tabindex="-1"><a class="header-anchor" href="#aop-装饰器形式" aria-hidden="true">#</a> AOP 装饰器形式</h2><p>中间件和 Aspect.around 方式很相似，都是包裹异步方法。中间件是 next，around 是 proceed，但是他们有一些区别：</p><blockquote><p>1、中间件不能处理参数，不能处理返回结果</p><p>2、切面可以对参数进行修改、判断、注入等操作，还可以对返回结果进行修改、校验、统一封装等操作</p></blockquote><p>Uma 内置了将中间件转换为切面的方法 <code>middlewareToAround</code>，因此我们可以以 AOP 的装饰器形式使用中间件，使用示例如下：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// app/src/controller/index.controller.ts AOP形式使用中间件</span></span>\n<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">as</span><span style="color:#C9D1D9;"> path </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;path&#39;</span><span style="color:#C9D1D9;">;</span></span>\n<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { BaseController, Path, Aspect, Result } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;@umajs/core&#39;</span><span style="color:#C9D1D9;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">class</span><span style="color:#FFA657;"> Index </span><span style="color:#FF7B72;">extends</span><span style="color:#FFA657;"> </span><span style="color:#79C0FF;">BaseController</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">    @</span><span style="color:#C9D1D9;">Aspect</span><span style="color:#FFA657;">.</span><span style="color:#D2A8FF;">around</span><span style="color:#FFA657;">(</span><span style="color:#A5D6FF;">&#39;mw&#39;</span><span style="color:#FFA657;">)</span></span>\n<span class="line"><span style="color:#FFA657;">    @</span><span style="color:#D2A8FF;">Path</span><span style="color:#FFA657;">(</span><span style="color:#A5D6FF;">&#39;/page&#39;</span><span style="color:#FFA657;">)</span></span>\n<span class="line"><span style="color:#FFA657;">    </span><span style="color:#D2A8FF;">page</span><span style="color:#FFA657;">() </span><span style="color:#C9D1D9;">{</span></span>\n<span class="line"><span style="color:#C9D1D9;">       console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.userService.</span><span style="color:#D2A8FF;">getDefaultUserAge</span><span style="color:#C9D1D9;">());</span></span>\n<span class="line"><span style="color:#C9D1D9;">       </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> Result.</span><span style="color:#D2A8FF;">view</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;index.html&#39;</span><span style="color:#C9D1D9;">, { test: </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;"> })</span></span>\n<span class="line"><span style="color:#C9D1D9;">    }</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#8B949E;">// app/src/aspect/mw.aspect.ts 定义AOP</span></span>\n<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { IAspect, middlewareToAround } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;@umajs/core&#39;</span><span style="color:#C9D1D9;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">mwFn</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;">() { </span><span style="color:#8B949E;">// 定义中间件</span></span>\n<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">async</span><span style="color:#C9D1D9;"> (</span><span style="color:#FFA657;">ctx</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">next</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>\n<span class="line"><span style="color:#C9D1D9;">    console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;****** mw before ******&quot;</span><span style="color:#C9D1D9;">);</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">next</span><span style="color:#C9D1D9;">();</span></span>\n<span class="line"><span style="color:#C9D1D9;">    console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;****** mw after *******&quot;</span><span style="color:#C9D1D9;">);</span></span>\n<span class="line"><span style="color:#C9D1D9;">  }</span></span>\n<span class="line"><span style="color:#C9D1D9;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#8B949E;">// 将中间件转换为切面方法</span></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">class</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">implements</span><span style="color:#FFA657;"> </span><span style="color:#79C0FF;">IAspect</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">    </span><span style="color:#8B949E;">// 第一种方法</span></span>\n<span class="line"><span style="color:#FFA657;">    </span><span style="color:#8B949E;">// async around({ target, proceed, args }) {</span></span>\n<span class="line"><span style="color:#FFA657;">    </span><span style="color:#8B949E;">//     return await middlewareToAround(mwFn())({target, proceed, args});</span></span>\n<span class="line"><span style="color:#FFA657;">    </span><span style="color:#8B949E;">// }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FFA657;">    </span><span style="color:#8B949E;">// 第二种方法</span></span>\n<span class="line"><span style="color:#FFA657;">    around </span><span style="color:#FF7B72;">=</span><span style="color:#FFA657;"> </span><span style="color:#D2A8FF;">middlewareToAround</span><span style="color:#FFA657;">(</span><span style="color:#D2A8FF;">mwFn</span><span style="color:#FFA657;">());</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>对于有局部加载需求的中间件，使用 AOP 形式代码结构更清晰，可读性更强，可以在<code>controller</code>中直观的看到当前中间件的使用。</p>',6),d={},b=(0,a(4110).Z)(d,[["render",function(s,n){const a=(0,l.up)("RouterLink");return(0,l.wg)(),(0,l.iD)(l.HY,null,[p,(0,l._)("p",null,[e,o,r,c,(0,l.Wm)(a,{to:"/%E5%9F%BA%E7%A1%80%E5%8A%9F%E8%83%BD/Plugin.html#%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91"},{default:(0,l.w5)((()=>[t])),_:1})]),i,(0,l._)("blockquote",null,[(0,l._)("p",null,[F,(0,l.Wm)(a,{to:"/%E5%9F%BA%E7%A1%80%E5%8A%9F%E8%83%BD/Plugin.html#%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91"},{default:(0,l.w5)((()=>[y])),_:1})]),(0,l._)("p",null,[D,(0,l.Wm)(a,{to:"/%E5%9F%BA%E7%A1%80%E5%8A%9F%E8%83%BD/Plugin.html#%E5%A4%8D%E5%90%88%E6%8F%92%E4%BB%B6%E5%BD%A2%E5%BC%8F"},{default:(0,l.w5)((()=>[u])),_:1})])]),m],64)}]])},2292:(s,n,a)=>{a.r(n),a.d(n,{data:()=>l});const l={key:"v-60a4ebef",path:"/%E5%9F%BA%E7%A1%80%E5%8A%9F%E8%83%BD/Middleware.html",title:"中间件（Middleware）",lang:"zh-CN",frontmatter:{head:[["meta",{property:"og:url",content:"/v1/%E5%9F%BA%E7%A1%80%E5%8A%9F%E8%83%BD/Middleware.html"}],["meta",{property:"og:site_name",content:"UMajs"}],["meta",{property:"og:title",content:"中间件（Middleware）"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{property:"og:locale:alternate",content:"en-US"}],["meta",{name:"twitter:card",content:"summary_large_image"}],["meta",{name:"twitter:image:alt",content:"UMajs"}],["meta",{property:"article:author",content:"JiaZeng"}],["meta",{property:"og:restrictions:age",content:"3+"}],["meta",{name:"twitter:creator",content:"UMajs"}]]},excerpt:"",headers:[{level:2,title:"插件形式",slug:"插件形式",children:[{level:3,title:"使用",slug:"使用",children:[]},{level:3,title:"其它",slug:"其它",children:[]}]},{level:2,title:"AOP 装饰器形式",slug:"aop-装饰器形式",children:[]}],filePathRelative:"基础功能/Middleware.md",git:{updatedTime:1630481998e3,contributors:[{name:"jiazengp",email:"jiazengp@gmail.com",commits:1}]}}},4110:(s,n)=>{n.Z=(s,n)=>{for(const[a,l]of n)s[a]=l;return s}}}]);