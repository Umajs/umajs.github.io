"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[879],{7736:(e,n,a)=>{a.r(n),a.d(n,{default:()=>o});const s=(0,a(3168).uE)('<h1 id="配置-config" tabindex="-1"><a class="header-anchor" href="#配置-config" aria-hidden="true">#</a> 配置（Config）</h1><h2 id="config-loader" tabindex="-1"><a class="header-anchor" href="#config-loader" aria-hidden="true">#</a> config loader</h2><p>Uma 的配置通过自动合并 app 及框架的配置，并根据不同环境读取不同的配置，最终配置通过<code>Uma.config</code>获取。</p><blockquote><p>插件的配置的 <code>options</code> 最终会和对应名称的 <code>config</code>(*.config.ts) 合并后传给插件</p><p><code>config</code> 的优先级最高，会将 <code>options</code> 中相同的配置覆盖、不同的合并</p></blockquote><h3 id="配置目录" tabindex="-1"><a class="header-anchor" href="#配置目录" aria-hidden="true">#</a> 配置目录</h3><p>框架默认会加载<code>${URSA_ROOT}/config</code>目录下以<code>xx.config.xx</code>命名的配置文件</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#c9d1d9;">|- config\n  |- plugin.config.ts\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>你也可以根据需求在实例化时通过<code>configPath</code>来指定配置目录</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">uma</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> Uma.</span><span style="color:#D2A8FF;">instance</span><span style="color:#C9D1D9;">({</span></span>\n<span class="line"><span style="color:#C9D1D9;">  Router,</span></span>\n<span class="line"><span style="color:#C9D1D9;">  ROOT: __dirname,</span></span>\n<span class="line"><span style="color:#C9D1D9;">  configPath: path.</span><span style="color:#D2A8FF;">join</span><span style="color:#C9D1D9;">(__dirname, </span><span style="color:#A5D6FF;">&#39;defaultConfig&#39;</span><span style="color:#C9D1D9;">),</span></span>\n<span class="line"><span style="color:#C9D1D9;">})</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="cli-初始化配置" tabindex="-1"><a class="header-anchor" href="#cli-初始化配置" aria-hidden="true">#</a> cli 初始化配置</h3><p>通过 <code>uma</code> 命令可以快速的给工程添加插件或者可发布的插件工程</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">uma config init [configName]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="配置获取" tabindex="-1"><a class="header-anchor" href="#配置获取" aria-hidden="true">#</a> 配置获取</h3><p><code>xx.config.ts</code>需 export 一个 default 值，配置将以文件名为 key，default 值为 value 存在实例上，可以通过<code>Uma</code>的 config 属性来获取到所有 config 值</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">Uma.config </span><span style="color:#8B949E;">// 获取 config 所有数据</span></span>\n<span class="line"><span style="color:#C9D1D9;">Uma.config.status </span><span style="color:#8B949E;">// 获取 status 配置</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',15),l={},o=(0,a(6215).Z)(l,[["render",function(e,n){return s}]])},5053:(e,n,a)=>{a.r(n),a.d(n,{data:()=>s});const s={key:"v-21cbdcca",path:"/development/Config.html",title:"配置（Config）",lang:"zh-CN",frontmatter:{head:[["meta",{property:"og:url",content:"/v2/development/Config.html"}],["meta",{property:"og:site_name",content:"UMajs"}],["meta",{property:"og:title",content:"配置（Config）"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{property:"og:locale:alternate",content:"en-US"}],["meta",{name:"twitter:card",content:"summary_large_image"}],["meta",{name:"twitter:image:alt",content:"UMajs"}],["meta",{property:"article:author",content:"wuba"}],["meta",{property:"og:restrictions:age",content:"3+"}]]},excerpt:"",headers:[{level:2,title:"config loader",slug:"config-loader",children:[{level:3,title:"配置目录",slug:"配置目录",children:[]},{level:3,title:"cli 初始化配置",slug:"cli-初始化配置",children:[]},{level:3,title:"配置获取",slug:"配置获取",children:[]}]}],filePathRelative:"development/Config.md",git:{updatedTime:1634816476e3,contributors:[{name:"BubbleM",email:"bubblelm@163.com",commits:1}]}}},6215:(e,n)=>{n.Z=(e,n)=>{for(const[a,s]of n)e[a]=s;return e}}}]);