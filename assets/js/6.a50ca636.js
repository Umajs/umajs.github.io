(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{328:function(t,s,a){},370:function(t,s,a){"use strict";a(328)},408:function(t,s,a){"use strict";a.r(s);a(370);var i=a(44),l=Object(i.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"global-foot"},[a("div",{staticClass:"global-foot-body"},[a("div",{staticClass:"global-foot-item",staticStyle:{flex:"1"}},[a("div",{staticClass:"title"},[t._v("Github")]),t._v(" "),a("div",{staticClass:"list"},[a("a",{staticClass:"list-item",attrs:{target:"_blank",href:"https://github.com/Umajs"}},[t._v("Organization")])])]),t._v(" "),a("div",{staticClass:"global-foot-item",staticStyle:{flex:"1"}},[a("div",{staticClass:"title"},[t._v("插件")]),t._v(" "),a("div",{staticClass:"list"},[a("a",{staticClass:"list-item",attrs:{target:"_blank",href:"https://github.com/Umajs/plugin-redis"}},[t._v("plugin-redis")]),t._v(" "),a("a",{staticClass:"list-item",attrs:{target:"_blank",href:"https://github.com/Umajs/plugin-schedule"}},[t._v("plugin-schedule")]),t._v(" "),a("a",{staticClass:"list-item",attrs:{target:"_blank",href:"https://github.com/Umajs/plugin-logger"}},[t._v("plugin-logger")]),t._v(" "),a("a",{staticClass:"list-item",attrs:{target:"_blank",href:"https://github.com/Umajs/umajs-express"}},[t._v("umajs-express")]),t._v(" "),a("a",{staticClass:"list-item",attrs:{target:"_blank",href:"https://github.com/Umajs/umajs-react-ssr"}},[t._v("umajs-react-ssr")]),t._v(" "),a("a",{staticClass:"list-item",attrs:{target:"_blank",href:"https://github.com/Umajs/umajs-deno"}},[t._v("umajs-deno")])])]),t._v(" "),a("div",{staticClass:"global-foot-item global-foot-itemt",staticStyle:{flex:"2"}},[a("div",{staticClass:"title"},[t._v("Umajs故事")]),t._v(" "),a("div",{staticClass:"content"},[a("div",{staticClass:"text"},[t._v("Umajs 就是我们针对业务项目里所存在的这些问题而进行的一系列探索的产出：它来自于具体业务、最终也服务于具体业务；无论是参数装饰器还是切面，都是围绕着关注点分离这一主旨而展开，通过提供这些简洁的、行之有效的方式来方便使用者对业务逻辑进行拆分、进而促进使用者对代码的思考：在这套范式下我们可以把校验逻辑、通信逻辑、计算逻辑、转换逻辑轻松的与主业务逻辑做切割；而通过上述这些手段对代码职责进一步的细化，显著提高可复用性之余，也更加便于重构和优化：修改或者优化某处切割出去的逻辑，完全不会影响其它的逻辑。")]),t._v(" "),a("div",{staticClass:"text"},[t._v("它不仅仅是一系列常用工具的集合与封装，它更像是我们对代码的一种期许。")])])])])])}],!1,null,null,null);s.default=l.exports}}]);