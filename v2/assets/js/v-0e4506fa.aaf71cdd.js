"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[50],{4268:(s,n,a)=>{a.r(n),a.d(n,{default:()=>C});var l=a(3168);const e=(0,l.uE)('<h1 id="中间件-middleware" tabindex="-1"><a class="header-anchor" href="#中间件-middleware" aria-hidden="true">#</a> 中间件（Middleware）</h1><p>Uma 基于 Koa2，兼容 middleware。在已有中间件的基础上提供两种使用形式：插件形式、AOP 形式。</p><h2 id="插件形式" tabindex="-1"><a class="header-anchor" href="#插件形式" aria-hidden="true">#</a> 插件形式</h2><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3>',4),p=(0,l._)("code",null,"Uma",-1),o=(0,l.Uk)(" 的插件机制很大部分是借用了 "),r=(0,l._)("code",null,"Koa",-1),t=(0,l.Uk)(" 的中间件，通过插件来使用中间件更易于开发和维护，请尽量用插件形式来使用中间件，插件开发和使用请参阅 "),c=(0,l.Uk)("Plugin 参考文档"),i=(0,l.uE)('<h3 id="其它" tabindex="-1"><a class="header-anchor" href="#其它" aria-hidden="true">#</a> 其它</h3><p>为了方便插件使用已发布的中间件，插件配置（plugin.config.ts）可以配置中间件便捷使用，配置如下</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// types</span></span>\n<span class="line"><span style="color:#C9D1D9;">[middlewareName: string]: {</span></span>\n<span class="line"><span style="color:#C9D1D9;">    type: </span><span style="color:#A5D6FF;">&#39;middleware&#39;</span><span style="color:#C9D1D9;">,         </span><span style="color:#8B949E;">// 仅在使用中间件的时候配置 type</span></span>\n<span class="line"><span style="color:#C9D1D9;">    handler: Koa.Middleware,</span></span>\n<span class="line"><span style="color:#C9D1D9;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// plugin.config.ts</span></span>\n<span class="line"><span style="color:#8B949E;">// 基于 koa-views 配置模板中间件</span></span>\n<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">as</span><span style="color:#C9D1D9;"> views </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;koa-views&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">view: {</span></span>\n<span class="line"><span style="color:#C9D1D9;">    type: </span><span style="color:#A5D6FF;">&#39;middleware&#39;</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">    handler: </span><span style="color:#D2A8FF;">views</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;./views&#39;</span><span style="color:#C9D1D9;">, {</span></span>\n<span class="line"><span style="color:#C9D1D9;">      map: { html: </span><span style="color:#A5D6FF;">&#39;nunjucks&#39;</span><span style="color:#C9D1D9;"> },</span></span>\n<span class="line"><span style="color:#C9D1D9;">    }),</span></span>\n<span class="line"><span style="color:#C9D1D9;">  }</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',4),d=(0,l.Uk)("请不要在插件配置（ plugin.config.ts ）中进行中间件的开发，让插件的配置更加纯粹。如需要请使用插件开发。"),y=(0,l.Uk)("Plugin 参考文档"),F=(0,l.Uk)("如果要动态的加载中间件，请使用复合插件形式。"),D=(0,l.Uk)("Plugin 参考文档"),u=(0,l.uE)('<h2 id="middleware装饰器" tabindex="-1"><a class="header-anchor" href="#middleware装饰器" aria-hidden="true">#</a> Middleware装饰器</h2><blockquote><p>Middleware装饰器(v2+)目前只支持函数装饰，可将koa中间件作用于特定的controller函数。这可以更灵活的控制避免全局中间件的影响；将中间件局部应用于单一或者多个路由。</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"></span>\n<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">middleware</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">async</span><span style="color:#C9D1D9;"> (</span><span style="color:#FFA657;">ctx</span><span style="color:#C9D1D9;">,</span><span style="color:#FFA657;">next</span><span style="color:#C9D1D9;">)</span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;">{</span></span>\n<span class="line"><span style="color:#C9D1D9;">    console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;****** middleware before ******&quot;</span><span style="color:#C9D1D9;">);</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">next</span><span style="color:#C9D1D9;">();</span></span>\n<span class="line"><span style="color:#C9D1D9;">    console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;****** middleware after *******&quot;</span><span style="color:#C9D1D9;">);</span></span>\n<span class="line"><span style="color:#C9D1D9;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">class</span><span style="color:#FFA657;"> Index </span><span style="color:#FF7B72;">extends</span><span style="color:#FFA657;"> </span><span style="color:#79C0FF;">BaseController</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">    @</span><span style="color:#D2A8FF;">Middleware</span><span style="color:#FFA657;">(</span><span style="color:#C9D1D9;">middleware</span><span style="color:#FFA657;">)</span></span>\n<span class="line"><span style="color:#FFA657;">    @</span><span style="color:#D2A8FF;">Path</span><span style="color:#FFA657;">(</span><span style="color:#A5D6FF;">&#39;/&#39;</span><span style="color:#FFA657;">)</span></span>\n<span class="line"><span style="color:#FFA657;">    </span><span style="color:#D2A8FF;">index</span><span style="color:#FFA657;">() </span><span style="color:#C9D1D9;">{</span></span>\n<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">view</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;index.html&#39;</span><span style="color:#C9D1D9;">, {</span></span>\n<span class="line"><span style="color:#C9D1D9;">            frameName: </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.testService.</span><span style="color:#D2A8FF;">returnFrameName</span><span style="color:#C9D1D9;">(),</span></span>\n<span class="line"><span style="color:#C9D1D9;">        });</span></span>\n<span class="line"><span style="color:#C9D1D9;">    }</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="aop-装饰器形式" tabindex="-1"><a class="header-anchor" href="#aop-装饰器形式" aria-hidden="true">#</a> AOP 装饰器形式</h2><p>中间件和 Around 方式很相似，都是包裹异步方法。中间件是 next，around 是 proceed，但是他们有一些区别：</p><blockquote><p>1、中间件不能处理参数，不能处理返回结果</p><p>2、切面可以对参数进行修改、判断、注入等操作，还可以对返回结果进行修改、校验、统一封装等操作</p></blockquote>',6),m=(0,l.Uk)("对于在中间件需要对参数，返回结构进行统一处理和校验，推荐使用 AOP 形式代码结构更清晰，可读性更强。"),b=(0,l.Uk)("AOP 参考文档"),h={},C=(0,a(6215).Z)(h,[["render",function(s,n){const a=(0,l.up)("RouterLink");return(0,l.wg)(),(0,l.iD)(l.HY,null,[e,(0,l._)("p",null,[p,o,r,t,(0,l.Wm)(a,{to:"/development/Plugin.html#%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91"},{default:(0,l.w5)((()=>[c])),_:1})]),i,(0,l._)("blockquote",null,[(0,l._)("p",null,[d,(0,l.Wm)(a,{to:"/development/Plugin.html#%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91"},{default:(0,l.w5)((()=>[y])),_:1})]),(0,l._)("p",null,[F,(0,l.Wm)(a,{to:"/development/Plugin.html#%E5%A4%8D%E5%90%88%E6%8F%92%E4%BB%B6%E5%BD%A2%E5%BC%8F"},{default:(0,l.w5)((()=>[D])),_:1})])]),u,(0,l._)("p",null,[m,(0,l.Wm)(a,{to:"/development/AOP.html"},{default:(0,l.w5)((()=>[b])),_:1})])],64)}]])},6659:(s,n,a)=>{a.r(n),a.d(n,{data:()=>l});const l={key:"v-0e4506fa",path:"/development/Middleware.html",title:"中间件（Middleware）",lang:"zh-CN",frontmatter:{head:[["meta",{property:"og:url",content:"/v2/development/Middleware.html"}],["meta",{property:"og:site_name",content:"UMajs"}],["meta",{property:"og:title",content:"中间件（Middleware）"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{property:"og:locale:alternate",content:"en-US"}],["meta",{name:"twitter:card",content:"summary_large_image"}],["meta",{name:"twitter:image:alt",content:"UMajs"}],["meta",{property:"article:author",content:"wuba"}],["meta",{property:"og:restrictions:age",content:"3+"}]]},excerpt:"",headers:[{level:2,title:"插件形式",slug:"插件形式",children:[{level:3,title:"使用",slug:"使用",children:[]},{level:3,title:"其它",slug:"其它",children:[]}]},{level:2,title:"Middleware装饰器",slug:"middleware装饰器",children:[]},{level:2,title:"AOP 装饰器形式",slug:"aop-装饰器形式",children:[]}],filePathRelative:"development/Middleware.md",git:{updatedTime:1634898136e3,contributors:[{name:"BubbleM",email:"bubblelm@163.com",commits:1},{name:"dazjean",email:"zunyi_zjj@163.com",commits:1}]}}},6215:(s,n)=>{n.Z=(s,n)=>{for(const[a,l]of n)s[a]=l;return s}}}]);