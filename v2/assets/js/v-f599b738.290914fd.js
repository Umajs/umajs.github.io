"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[115],{6780:(s,n,a)=>{a.r(n),a.d(n,{default:()=>cs});var l=a(4386);const p=(0,l._)("h1",{id:"vue-ssr",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#vue-ssr","aria-hidden":"true"},"#"),(0,l.Uk)(" vue-ssr")],-1),e=(0,l._)("code",null,"Umajs-vue-ssr",-1),o=(0,l.Uk)("是由"),r={href:"https://github.com/Umajs/plugin-vue-ssr",target:"_blank",rel:"noopener noreferrer"},c=(0,l.Uk)("@umajs/plugin-vue-ssr"),t=(0,l.Uk)(" 搭配"),i={href:"https://github.com/dazjean/Srejs",target:"_blank",rel:"noopener noreferrer"},D=(0,l.Uk)("Srejs"),y=(0,l.Uk)("构建的轻量级，使用简单，灵活的"),u=(0,l._)("code",null,"vue",-1),b=(0,l.Uk)("服务端渲染解决方案;可以在"),d=(0,l._)("code",null,"controller",-1),F=(0,l.Uk)("和"),m=(0,l._)("code",null,"middleware",-1),C=(0,l.Uk)("中灵活使用,通过模板引擎式的语法对"),h=(0,l._)("code",null,"vue",-1),g=(0,l.Uk)("页面组件进行服务端渲染。"),v=(0,l.uE)('<h2 id="_1、插件介绍" tabindex="-1"><a class="header-anchor" href="#_1、插件介绍" aria-hidden="true">#</a> 1、插件介绍</h2><p><code>plugin-vue-ssr</code>插件扩展了<code>Umajs</code>中提供的统一返回处理<code>Result</code>对象，新增了<code>Result.vue</code>页面组件渲染方法，可在<code>controller</code>自由调用,使用类似传统模板引擎；也同时将方法挂载到了 koa 中间件中的<code>ctx</code>对象上；当一些公关的页面组件，比如 404、异常提示页面、登录或者需要在中间件中拦截跳转时可以在<code>middleware</code>中调用。</p><h2 id="_2、特性" tabindex="-1"><a class="header-anchor" href="#_2、特性" aria-hidden="true">#</a> 2、特性</h2><ul><li>不默认路由，不需区分前端路由和后端路由概念，且支持页面级组件 AB 测；<code>灵活</code></li><li>页面组件中没有<code>__isBrowser__</code>之类变量对<code>ssr</code>和<code>csr</code>模式进行特殊区分处理;<code>统一</code>。</li><li>自定义<code>HTML</code>采用<code>htmlWebpackPlugin</code>,没有<code>runtime</code>，页面响应速度更高;<code>高性能</code>。</li><li>支持<code>html</code>中使用<code>nunjucks</code>类模板引擎语法实现<code>SEO</code>；<code>易上手</code>。</li><li>页面开发不依赖框架包装的任何模块，保持原生的<code>vue</code>开发体验;<code>友好,易升级</code>。</li><li>数据获取提供服务端注入方式，页面视图渲染和数据加工分开处理；<code>逻辑更清晰</code>。</li><li>支持<code>SSR</code>和<code>CSR</code>动态调整，支持<code>SSR</code>缓存,降级。<code>高可用</code>。</li><li>支持其他<code>koa</code>开发框架使用。<code>可扩展</code>。</li><li>支持 MPA,各页面组件可单独构建，<code>可页面级更新</code>。</li></ul><h2 id="_3、脚手架快速初始化项目-推荐" tabindex="-1"><a class="header-anchor" href="#_3、脚手架快速初始化项目-推荐" aria-hidden="true">#</a> 3、脚手架快速初始化项目[推荐]</h2><blockquote><p>在 cli 中支持快速创建<code>umajs-vue-ssr</code>模板工程。</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">$ npm i @umajs/cli -g  // 安装cli工具</span></span>\n<span class="line"><span style="color:#C9D1D9;">$ uma project umajs-vue-demo  //通过uma初始化工程，选择vue2.0模板工程</span></span>\n<span class="line"><span style="color:#C9D1D9;">✔ loading template</span></span>\n<span class="line"><span style="color:#FF7B72;">?</span><span style="color:#C9D1D9;"> please choise a template to create project (Use arrow keys)</span></span>\n<span class="line"><span style="color:#C9D1D9;">  all,全套模板，包含部分代码示例</span></span>\n<span class="line"><span style="color:#C9D1D9;">  mini,极简模板，仅有核心代码</span></span>\n<span class="line"><span style="color:#C9D1D9;">  standard,标准模板，不包含示例代码</span></span>\n<span class="line"><span style="color:#C9D1D9;">  react,umajs-react-ssr模板，包含示例代码</span></span>\n<span class="line"><span style="color:#C9D1D9;">❯ vue2.0,umajs-vue-ssr模板，包含示例代码</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>依赖安装和启动</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#c9d1d9;">cd umajs-vue-demo\nyarn install\nyarn start\n\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_4、手动安装集成插件" tabindex="-1"><a class="header-anchor" href="#_4、手动安装集成插件" aria-hidden="true">#</a> 4、手动安装集成插件</h2><h3 id="插件安装" tabindex="-1"><a class="header-anchor" href="#插件安装" aria-hidden="true">#</a> 插件安装</h3><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#c9d1d9;"> yarn add @umajs/plugin-vue-ssr --save\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>打开 <code>package.json</code> 文件并添加 <code>scripts</code> 配置段：</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#c9d1d9;">&quot;scripts&quot;: {\n    &quot;start&quot;:&#39;node app.js&#39;,\n    &quot;build&quot;:&quot;npx ssr build&quot;,\n    &quot;analyzer&quot;: &quot;npx ssr analyzer&quot;,\n},\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><code>start</code> 启动你的 node 项目</li><li><code>build</code> 运行<code>npx ssr build</code>构建用于生产环境的应用程序，Srejs 为多项目工程目录结构，可通过指定页面标识单独构建或者启动特定页面，命令为：<code>npm run build xxx</code></li><li><code>analyzer</code> 运行<code>npx ssr analyzer</code> 用于分析页面组件打包依赖分析 可通过 <code>npm run analyzer xxx</code> xxx 为页面组件标识，可指定分析某个页面组件打包结果</li></ul><h3 id="插件配置" tabindex="-1"><a class="header-anchor" href="#插件配置" aria-hidden="true">#</a> 插件配置</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// plugin.config.ts</span></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> &lt;{ [key</span><span style="color:#FF7B72;">:</span><span style="color:#FFA657;"> </span><span style="color:#79C0FF;">string</span><span style="color:#FFA657;">]</span><span style="color:#FF7B72;">:</span><span style="color:#FFA657;"> TPluginConfig }&gt;{</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">vue: {</span></span>\n<span class="line"><span style="color:#C9D1D9;">    enable: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">    options: {</span></span>\n<span class="line"><span style="color:#C9D1D9;">      rootDir: </span><span style="color:#A5D6FF;">&#39;web&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#8B949E;">// 客户端页面组件根文件夹</span></span>\n<span class="line"><span style="color:#C9D1D9;">      rootNode: </span><span style="color:#A5D6FF;">&#39;app&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#8B949E;">// 客户端页面挂载根元素ID</span></span>\n<span class="line"><span style="color:#C9D1D9;">      ssr: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">, </span><span style="color:#8B949E;">// 全局开启服务端渲染</span></span>\n<span class="line"><span style="color:#C9D1D9;">      cache: </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">, </span><span style="color:#8B949E;">// 全局使用服务端渲染缓存 开发环境设置true无效</span></span>\n<span class="line"><span style="color:#C9D1D9;">      prefixCDN: </span><span style="color:#A5D6FF;">&#39;/&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#8B949E;">// 客户端代码部署CDN前缀</span></span>\n<span class="line"><span style="color:#C9D1D9;">    },</span></span>\n<span class="line"><span style="color:#C9D1D9;">  }</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构" aria-hidden="true">#</a> 目录结构</h3><p>框架默认配置属性<code>rootDir</code>默认为根目录下<code>web</code>，pages 下是页面组件入口，比如<code>list</code>页面，vue 主入口文件为<code>list/index.js</code>，页面组件为<code>list/App.vue</code></p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#c9d1d9;">└── web\n    └── pages\n        └── list\n            ├── App.vue\n            ├── index.js\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="页面组件-app-vue" tabindex="-1"><a class="header-anchor" href="#页面组件-app-vue" aria-hidden="true">#</a> 页面组件(App.vue)</h3><div class="language-vue ext-vue line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">&lt;!--vue2.0版本APP.vue必须要设置根元素--&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">id</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;app&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">h1</span><span style="color:#C9D1D9;">&gt;{{ msg }}&lt;/</span><span style="color:#7EE787;">h1</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">name: </span><span style="color:#A5D6FF;">&#39;app&#39;</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#D2A8FF;">data</span><span style="color:#FFA657;">() </span><span style="color:#C9D1D9;">{</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> {</span></span>\n<span class="line"><span style="color:#C9D1D9;">      msg: </span><span style="color:#A5D6FF;">&#39;hi vue ssr!&#39;</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">    }</span></span>\n<span class="line"><span style="color:#C9D1D9;">  }</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="页面主入口文件-index-js" tabindex="-1"><a class="header-anchor" href="#页面主入口文件-index-js" aria-hidden="true">#</a> 页面主入口文件(index.js)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> App </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;./App.vue&#39;</span></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">App</span><span style="color:#FFA657;">, </span><span style="color:#8B949E;">// 必须导出App</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">Router</span><span style="color:#FFA657;">, </span><span style="color:#8B949E;">//如使用vue-router 导出路由配置对象</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">Store</span><span style="color:#FFA657;">, </span><span style="color:#8B949E;">//如使用vuex 导出store对象</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>Pages</code>下按照文件夹名称定义 vue 页面组件，每一个页面组件必须包含<code>inde.js</code>主入口文件,文件必须导出组件<code>App</code>。如果使用<code>vue-router</code>,则将路由配置导出为<code>Router</code>对象；当使用<code>vuex</code>时，则将初始化配置导出为<code>Store</code>。</p><h2 id="_5、插件使用" tabindex="-1"><a class="header-anchor" href="#_5、插件使用" aria-hidden="true">#</a> 5、插件使用</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { BaseController, Path } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;@umajs/core&#39;</span></span>\n<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { Result } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;../plugins/vue-ssr&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">class</span><span style="color:#FFA657;"> Index </span><span style="color:#FF7B72;">extends</span><span style="color:#FFA657;"> </span><span style="color:#79C0FF;">BaseController</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">  @</span><span style="color:#D2A8FF;">Path</span><span style="color:#FFA657;">(</span><span style="color:#A5D6FF;">&#39;/&#39;</span><span style="color:#FFA657;">)</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#D2A8FF;">index</span><span style="color:#FFA657;">() </span><span style="color:#C9D1D9;">{</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> Result.</span><span style="color:#D2A8FF;">vue</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;index&#39;</span><span style="color:#C9D1D9;">, { title: </span><span style="color:#A5D6FF;">&#39;umajs-vue-ssr&#39;</span><span style="color:#C9D1D9;"> })</span></span>\n<span class="line"><span style="color:#C9D1D9;">  }</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="_6、插件-api" tabindex="-1"><a class="header-anchor" href="#_6、插件-api" aria-hidden="true">#</a> 6、插件 API</h2><blockquote><p>插件扩展了<code>Umajs</code>中提供的统一返回处理<code>Result</code>方法，新增了<code>vue</code>页面组件可在<code>controller</code>自由调用,方式类似传统模板引擎使用方法；也同时将方法挂载到了 koa 中间件中的<code>ctx</code>对象上；当一些公关的页面组件，比如 404、异常提示页面、登录或者需要在中间件中拦截跳转时可以在<code>middleware</code>中调用。</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#FF7B72;">interface</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">TviewOptions</span><span style="color:#C9D1D9;">{</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FFA657;">ssr</span><span style="color:#FF7B72;">?:</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">boolean</span><span style="color:#C9D1D9;">, </span><span style="color:#8B949E;">// 全局开启服务端渲染</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FFA657;">cache</span><span style="color:#FF7B72;">?:</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">boolean</span><span style="color:#C9D1D9;">, </span><span style="color:#8B949E;">// 全局使用服务端渲染缓存</span></span>\n<span class="line"><span style="color:#C9D1D9;">}</span></span>\n<span class="line"><span style="color:#C9D1D9;">Result.</span><span style="color:#D2A8FF;">vue</span><span style="color:#C9D1D9;">(viewName:string,initProps</span><span style="color:#FF7B72;">?:</span><span style="color:#C9D1D9;">object,options</span><span style="color:#FF7B72;">?:</span><span style="color:#C9D1D9;">TviewOptions);</span></span>\n<span class="line"><span style="color:#C9D1D9;">ctx.</span><span style="color:#D2A8FF;">vue</span><span style="color:#C9D1D9;">(viewName:string,initProps</span><span style="color:#FF7B72;">?:</span><span style="color:#C9D1D9;">object,options</span><span style="color:#FF7B72;">?:</span><span style="color:#C9D1D9;">TviewOptions);</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><em>如果 options 参数传递为空 则默认会使用全局配置属性，全局配置采用插件集成时传递的 options 参数</em></p><p><strong>注意</strong> <code>cache</code>只在<code>生产环境</code>开启有效。</p><h2 id="_7、数据获取" tabindex="-1"><a class="header-anchor" href="#_7、数据获取" aria-hidden="true">#</a> 7、数据获取</h2><blockquote><p>在<code>Pages</code>页面中，vue 页面组件获取数据有两种形式；我们分为服务端直出数据(Props 和 State)和 vue 组件静态方法<code>asyncData</code>获取两种形式。我们可以通过这两种方式对服务端渲染时首次页面渲染进行数据填充，使得服务端渲染时能返回完整的 DOM 结构，提高用户体验和更利于<code>SEO</code>.</p></blockquote><h3 id="服务端直出-props" tabindex="-1"><a class="header-anchor" href="#服务端直出-props" aria-hidden="true">#</a> 服务端直出 Props</h3>',35),A=(0,l.Uk)("框架在服务端提供了页面组件的渲染函数"),E=(0,l._)("code",null,"Result.vue",-1),x=(0,l.Uk)(",在调用函数渲染时我们可以在 initProps 参数中传递初始化的数据对象；这些数据可以在创建 vue 实例时会注册为组件实例的 Props 参数。在页面组件中我们可以将其定义为 Props。 "),k={href:"https://cn.vuejs.org/v2/guide/components-props.html",target:"_blank",rel:"noopener noreferrer"},_=(0,l.Uk)("了解 vue 组件 Props"),f=(0,l.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">Result.</span><span style="color:#D2A8FF;">vue</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;list&#39;</span><span style="color:#C9D1D9;">, {</span></span>\n<span class="line"><span style="color:#C9D1D9;">  title: </span><span style="color:#A5D6FF;">&#39;xxx&#39;</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">  keywords: </span><span style="color:#A5D6FF;">&#39;xxx&#39;</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">  description: </span><span style="color:#A5D6FF;">&#39;xxxx&#39;</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">  say: </span><span style="color:#A5D6FF;">&#39;hi!&#39;</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">})</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>在页面组件中我们可以直接通过 Props 将服务端直出的数据在 vue 模板中使用。</p><div class="language-vue ext-vue line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">&lt;!--vue2.0版本APP.vue必须要设置根元素--&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">id</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;app&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">h1</span><span style="color:#C9D1D9;">&gt;{{ title }}&lt;/</span><span style="color:#7EE787;">h1</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;{{ say }}&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">name: </span><span style="color:#A5D6FF;">&#39;app&#39;</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">props: [</span><span style="color:#A5D6FF;">&#39;say&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;title&#39;</span><span style="color:#C9D1D9;">]</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>**特别说明：**在<code>initProps</code>参数中，<code>title,keywords,description</code>还会默认被解析为 web 网页头中的 标题，关键字，描述填充。</p><h3 id="服务端初直出-state" tabindex="-1"><a class="header-anchor" href="#服务端初直出-state" aria-hidden="true">#</a> 服务端初直出 State</h3><blockquote><p>在 initProps 对象中，框架会默认将 State 属性初始化为 store 实例。从根组件“注入”到每一个子组件中。</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">Result.</span><span style="color:#D2A8FF;">vue</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;list&#39;</span><span style="color:#C9D1D9;">, {</span></span>\n<span class="line"><span style="color:#C9D1D9;">  title: </span><span style="color:#A5D6FF;">&#39;xxx&#39;</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">  keywords: </span><span style="color:#A5D6FF;">&#39;xxx&#39;</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">  description: </span><span style="color:#A5D6FF;">&#39;xxxx&#39;</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">  state: {</span></span>\n<span class="line"><span style="color:#C9D1D9;">    say: </span><span style="color:#A5D6FF;">&#39;hi!&#39;</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">  },</span></span>\n<span class="line"><span style="color:#C9D1D9;">})</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>我们可以直接在 <code>Vue</code> 任意组件中直接获得 <code>Vuex</code> 状态。获取方式为<code>this.$store.state</code>。</p><div class="language-vue ext-vue line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">&lt;!--vue2.0版本APP.vue必须要设置根元素--&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">id</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;app&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">h1</span><span style="color:#C9D1D9;">&gt;{{ title }}&lt;/</span><span style="color:#7EE787;">h1</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;{{ say }}&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">name: </span><span style="color:#A5D6FF;">&#39;app&#39;</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">props: [</span><span style="color:#A5D6FF;">&#39;title&#39;</span><span style="color:#C9D1D9;">]</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#D2A8FF;">data</span><span style="color:#C9D1D9;">: () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> {</span></span>\n<span class="line"><span style="color:#C9D1D9;">      say: </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.$store.state.say,</span></span>\n<span class="line"><span style="color:#C9D1D9;">    }</span></span>\n<span class="line"><span style="color:#C9D1D9;">  }</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>由于 Vuex 的状态存储是响应式的，从 store 实例中可以在计算属性中返回某个状态。</p><div class="language-vue ext-vue line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">name: </span><span style="color:#A5D6FF;">&#39;app&#39;</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">props: [</span><span style="color:#A5D6FF;">&#39;title&#39;</span><span style="color:#C9D1D9;">]</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">computed: {</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">say</span><span style="color:#C9D1D9;">() {</span></span>\n<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.$store.state.say</span></span>\n<span class="line"><span style="color:#C9D1D9;">    },</span></span>\n<span class="line"><span style="color:#C9D1D9;">  }</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',11),B=(0,l.Uk)("更多获取 Vuex 状态的使用方法可查看官方文档"),q={href:"https://vuex.vuejs.org/zh/guide/state.html",target:"_blank",rel:"noopener noreferrer"},j=(0,l.Uk)("Vuex"),U=(0,l.uE)('<h3 id="asyncdata-静态方法" tabindex="-1"><a class="header-anchor" href="#asyncdata-静态方法" aria-hidden="true">#</a> asyncData 静态方法</h3><blockquote><p><code>asyncData</code>是页面组件数据获取的钩子，<code>只能作用于页面</code>。其接收对象参数默认是<code>vuex</code>的<code>store</code>和当前<code>router</code>,通过<code>router</code>可以获取到当前路由的参数等数据，然后调用异步请求获取 http 类型的数据，然后通过<code>store</code>触发状态管理的更新,也可直接改写操作<code>store.state</code>属性。框架会合并到<code>store</code>数据上下文<code>state</code>中。</p></blockquote><div class="language-vue ext-vue line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">name: </span><span style="color:#A5D6FF;">&#39;app&#39;</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#D2A8FF;">data</span><span style="color:#FFA657;">() </span><span style="color:#C9D1D9;">{</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> {</span></span>\n<span class="line"><span style="color:#C9D1D9;">      msg: </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.$store.state.msg,</span></span>\n<span class="line"><span style="color:#C9D1D9;">    }</span></span>\n<span class="line"><span style="color:#C9D1D9;">  }</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#FF7B72;">async</span><span style="color:#FFA657;"> </span><span style="color:#D2A8FF;">asyncData</span><span style="color:#FFA657;">({ store, route }) </span><span style="color:#C9D1D9;">{</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// store.state.msg = &#39;about来自asyncData的数据&#39;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// 触发 action 后，会返回 Promise</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> store.</span><span style="color:#D2A8FF;">dispatch</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;fetchItem&#39;</span><span style="color:#C9D1D9;">, route.params.id)</span></span>\n<span class="line"><span style="color:#C9D1D9;">  }</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>',3),w=(0,l._)("strong",null,"asyncData",-1),S=(0,l.Uk)("灵感来自官方"),P={href:"https://ssr.vuejs.org/zh/guide/data.html#%E6%95%B0%E6%8D%AE%E9%A2%84%E5%8F%96%E5%AD%98%E5%82%A8%E5%AE%B9%E5%99%A8-data-store",target:"_blank",rel:"noopener noreferrer"},M=(0,l.Uk)("vue-ssr 示例"),R=(0,l.Uk)("和"),T={href:"https://zh.nuxtjs.org/docs/2.x/features/data-fetching#async-data",target:"_blank",rel:"noopener noreferrer"},z=(0,l.Uk)("nuxtjs"),W=(0,l.Uk)("。"),H=(0,l.uE)('<h2 id="_8、seo-和-html" tabindex="-1"><a class="header-anchor" href="#_8、seo-和-html" aria-hidden="true">#</a> 8、SEO 和 HTML</h2><blockquote><p>在<code>initProps</code>中通过,默认接收<code>title,keywords,description</code>作为页面标题，关键字，网页描述填充字段。</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">Result.</span><span style="color:#D2A8FF;">vue</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;list&#39;</span><span style="color:#C9D1D9;">, { title: </span><span style="color:#A5D6FF;">&#39;xxx&#39;</span><span style="color:#C9D1D9;">, keywords: </span><span style="color:#A5D6FF;">&#39;xxx&#39;</span><span style="color:#C9D1D9;">, description: </span><span style="color:#A5D6FF;">&#39;xxxx&#39;</span><span style="color:#C9D1D9;"> })</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="自定义-html" tabindex="-1"><a class="header-anchor" href="#自定义-html" aria-hidden="true">#</a> 自定义 html</h3><blockquote><p>框架内置<code>HTMLWebpackPlugin</code>插件，开发者在页面组件同级目录下可以覆盖默认 html 模板自定义引入第三方资源和脚本。自定义 html 文件名为页面下的<code>index.html</code>。</p></blockquote><div class="language-html ext-html line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">&lt;!-- web/pages/index/index.html --&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;!</span><span style="color:#7EE787;">DOCTYPE</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">html</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">html</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">head</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">meta</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">http-equiv</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;Content-Type&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">content</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;text/html; charset=UTF-8&quot;</span><span style="color:#C9D1D9;"> /&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">meta</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">charset</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;utf-8&quot;</span><span style="color:#C9D1D9;"> /&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">meta</span></span>\n<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#79C0FF;">name</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;viewport&quot;</span></span>\n<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#79C0FF;">content</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width&quot;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    /&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">meta</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">name</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;format-detection&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">content</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;telephone=no&quot;</span><span style="color:#C9D1D9;"> /&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">meta</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">name</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;format-detection&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">content</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;email=no&quot;</span><span style="color:#C9D1D9;"> /&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">meta</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">name</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;format-detection&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">content</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;address=no;&quot;</span><span style="color:#C9D1D9;"> /&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">meta</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">name</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;apple-mobile-web-app-capable&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">content</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;yes&quot;</span><span style="color:#C9D1D9;"> /&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">meta</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">name</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;apple-mobile-web-app-status-bar-style&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">content</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;default&quot;</span><span style="color:#C9D1D9;"> /&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">title</span><span style="color:#C9D1D9;">&gt;vue ssr&lt;/</span><span style="color:#7EE787;">title</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">&lt;!-- 引入第三方组件库样式 --&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">head</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">body</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">&lt;!--vue-ssr-outlet--&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">body</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">&lt;!-- 引入第三方sdk脚本 --&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">html</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="模板插值" tabindex="-1"><a class="header-anchor" href="#模板插值" aria-hidden="true">#</a> 模板插值</h3><p>在 html 模板中，还可以使用模板插值。服务端渲染初始化时传递的<code>initProps</code>数据在服务端渲染时会被注入为<code>渲染上下文对象</code>。</p><div class="language-html ext-html line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">html</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">head</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">&lt;!-- 使用双花括号(double-mustache)进行 HTML 转义插值(HTML-escaped interpolation) --&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">title</span><span style="color:#C9D1D9;">&gt;{{ title }}&lt;/</span><span style="color:#7EE787;">title</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">&lt;!-- 使用三花括号(triple-mustache)进行 HTML 不转义插值(non-HTML-escaped interpolation) --&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    {{{ meta }}}</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">head</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">body</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">&lt;!--vue-ssr-outlet--&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">body</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">html</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="支持全局-html" tabindex="-1"><a class="header-anchor" href="#支持全局-html" aria-hidden="true">#</a> 支持全局 HTML</h3><p>为满足业务引入第三方脚本也提供了以下方式自定义 html 模板。</p><ul><li><code>web/pages/xxx/index.html</code>（局部页面生效）</li><li><code>web/index.html</code>（全局生效）</li></ul><p><strong>优先级</strong><code>web/pages/xxx/index.html</code> &gt; <code>web/index.html</code></p><h2 id="_9、vuex" tabindex="-1"><a class="header-anchor" href="#_9、vuex" aria-hidden="true">#</a> 9、vuex</h2><blockquote><p>当项目比较复杂时，我们可以在页面组件入口文件中导出 Vuex store 对象。框架会自动从根页面组件注入 vue 子组件中，通过$store 访问到实例化后的 store。</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> App </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;./App.vue&#39;</span></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">App</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">Store: {</span></span>\n<span class="line"><span style="color:#C9D1D9;">    state: {</span></span>\n<span class="line"><span style="color:#C9D1D9;">      count: </span><span style="color:#79C0FF;">100</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">    },</span></span>\n<span class="line"><span style="color:#C9D1D9;">    mutations: {</span></span>\n<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#D2A8FF;">increment</span><span style="color:#C9D1D9;">: (</span><span style="color:#FFA657;">state</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> state.count</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#D2A8FF;">decrement</span><span style="color:#C9D1D9;">: (</span><span style="color:#FFA657;">state</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> state.count</span><span style="color:#FF7B72;">--</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">    },</span></span>\n<span class="line"><span style="color:#C9D1D9;">  }</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>框架接收到 Store 对象后，会实例化 vuex。并且初始化到 vue 实例中,通过 vue.use 注入到全局。对于初始化的 state 数据，如果在 initProps 中也传入同名的属性，则 initProps.state 将会覆盖主入口文件传入 store.state 中的属性值。</p><h3 id="服务端初始化-state" tabindex="-1"><a class="header-anchor" href="#服务端初始化-state" aria-hidden="true">#</a> 服务端初始化 state</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">Result.</span><span style="color:#D2A8FF;">vue</span><span style="color:#C9D1D9;">(ctx, </span><span style="color:#A5D6FF;">&#39;vuex&#39;</span><span style="color:#C9D1D9;">, { state: { count: </span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;"> } })</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="页面组件获取状态" tabindex="-1"><a class="header-anchor" href="#页面组件获取状态" aria-hidden="true">#</a> 页面组件获取状态</h3><div class="language-vue ext-vue line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">id</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;app&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;{{ count }}&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;"> @</span><span style="color:#79C0FF;">click</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;</span><span style="color:#C9D1D9;">increment</span><span style="color:#A5D6FF;">&quot;</span><span style="color:#C9D1D9;">&gt;+&lt;/</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;"> @</span><span style="color:#79C0FF;">click</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;</span><span style="color:#C9D1D9;">decrement</span><span style="color:#A5D6FF;">&quot;</span><span style="color:#C9D1D9;">&gt;-&lt;/</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">name: </span><span style="color:#A5D6FF;">&#39;vuex&#39;</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">computed: {</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">count</span><span style="color:#C9D1D9;">() {</span></span>\n<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.$store.state.count</span></span>\n<span class="line"><span style="color:#C9D1D9;">    },</span></span>\n<span class="line"><span style="color:#C9D1D9;">  }</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">methods: {</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">increment</span><span style="color:#C9D1D9;">() {</span></span>\n<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.$store.</span><span style="color:#D2A8FF;">commit</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;increment&#39;</span><span style="color:#C9D1D9;">)</span></span>\n<span class="line"><span style="color:#C9D1D9;">    },</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">decrement</span><span style="color:#C9D1D9;">() {</span></span>\n<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.$store.</span><span style="color:#D2A8FF;">commit</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;decrement&#39;</span><span style="color:#C9D1D9;">)</span></span>\n<span class="line"><span style="color:#C9D1D9;">    },</span></span>\n<span class="line"><span style="color:#C9D1D9;">  }</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>最后展示到页面上的<code>count</code>初始值为：<code>200</code></p><h2 id="_10、vue-router" tabindex="-1"><a class="header-anchor" href="#_10、vue-router" aria-hidden="true">#</a> 10、vue-router</h2><blockquote><p>当 vue 页面组件需要和 vue-router 结合开发单页面应用时，在入口文件中我们也可以通过 Router 属性导出路由配置。</p></blockquote><ul><li>客户端页面组件入口文件路由配置</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> App </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;./App.vue&#39;</span></span>\n<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> About </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;./about.vue&#39;</span></span>\n<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> Home </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;./home.vue&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">App</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#C9D1D9;">Router: {</span></span>\n<span class="line"><span style="color:#C9D1D9;">    mode: </span><span style="color:#A5D6FF;">&#39;history&#39;</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">    fallback: </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">    base: </span><span style="color:#A5D6FF;">&#39;/index/&#39;</span><span style="color:#C9D1D9;">,</span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">scrollBehavior</span><span style="color:#C9D1D9;">: () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> ({ y: </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;"> }),</span></span>\n<span class="line"><span style="color:#C9D1D9;">    routes: [</span></span>\n<span class="line"><span style="color:#C9D1D9;">      { path: </span><span style="color:#A5D6FF;">&#39;/about&#39;</span><span style="color:#C9D1D9;">, props: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">, component: About },</span></span>\n<span class="line"><span style="color:#C9D1D9;">      { path: </span><span style="color:#A5D6FF;">&#39;/home&#39;</span><span style="color:#C9D1D9;">, props: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">, component: Home },</span></span>\n<span class="line"><span style="color:#C9D1D9;">      { path: </span><span style="color:#A5D6FF;">&#39;/&#39;</span><span style="color:#C9D1D9;">, redirect: </span><span style="color:#A5D6FF;">&#39;/home&#39;</span><span style="color:#C9D1D9;"> },</span></span>\n<span class="line"><span style="color:#C9D1D9;">    ],</span></span>\n<span class="line"><span style="color:#C9D1D9;">  }</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><strong>注意：服务端渲染模式下不支持使用 import 动态导入组件方式进行路由懒加载</strong></p><ul><li>服务端路由</li></ul><blockquote><p>对于服务端我们需要保持客户端和服务端路由一致，否则会出现子路由页面刷新<code>404</code>现象。</p></blockquote><ul><li>页面路由获取数据</li></ul><blockquote><p>在页面组件中页面数据获取方式和普通页面组件保持一致，我们可以使用服务端渲染 props 直出和 asyncData 钩子函数两种方式获取，具体使用参考<code>数据获取</code>章节。</p></blockquote><h2 id="_11、内置-css-支持" tabindex="-1"><a class="header-anchor" href="#_11、内置-css-支持" aria-hidden="true">#</a> 11、内置 css 支持</h2><blockquote><p>框架内置了<code>vue-style-loader</code>以及 css 预处理器 loader,支持<code>*.vue</code>单个文件组件内的 <code>&lt;style&gt;</code>提取为单独 css 样式文件。也支持 CSS Modules。以下示例均开箱即用，无需额外配置。</p></blockquote><h3 id="scoped-css" tabindex="-1"><a class="header-anchor" href="#scoped-css" aria-hidden="true">#</a> Scoped CSS</h3><div class="language-vue ext-vue line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">class</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;scoped&quot;</span><span style="color:#C9D1D9;">&gt;style scoped&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">style</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">scoped</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#79C0FF;">.scoped</span><span style="color:#C9D1D9;"> {</span></span>\n<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">color</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">red</span><span style="color:#C9D1D9;">;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">font-size</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">18</span><span style="color:#FF7B72;">px</span><span style="color:#C9D1D9;">;</span></span>\n<span class="line"><span style="color:#C9D1D9;">}</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">style</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="预处理器-less-scss" tabindex="-1"><a class="header-anchor" href="#预处理器-less-scss" aria-hidden="true">#</a> 预处理器 less/scss</h3><div class="language-vue ext-vue line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">class</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;scoped&quot;</span><span style="color:#C9D1D9;">&gt;style scoped&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">style</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">lang</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;less&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">scoped</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#79C0FF;">.scoped</span><span style="color:#C9D1D9;"> {</span></span>\n<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">color</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">red</span><span style="color:#C9D1D9;">;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">font-size</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">18</span><span style="color:#FF7B72;">px</span><span style="color:#C9D1D9;">;</span></span>\n<span class="line"><span style="color:#C9D1D9;">}</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">style</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">style</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">lang</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;scss&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">scoped</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#79C0FF;">.scoped_scss</span><span style="color:#C9D1D9;"> {</span></span>\n<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">color</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">red</span><span style="color:#C9D1D9;">;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">font-size</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">18</span><span style="color:#FF7B72;">px</span><span style="color:#C9D1D9;">;</span></span>\n<span class="line"><span style="color:#C9D1D9;">}</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">style</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><em><em>当我们采用</em>.less 或者</em>.scss 文件编写样式时，也可以从 JavaScript 中导入 CSS，例如，import &#39;./foo.css&#39;**</p><h2 id="_12、css-modules" tabindex="-1"><a class="header-anchor" href="#_12、css-modules" aria-hidden="true">#</a> 12、CSS Modules</h2><ul><li>使用 style module</li></ul><blockquote><p>在你的 <code>&lt;style&gt;</code>上添加 module 特性,这个 module 特性指引 Vue Loader 作为名为 $style 的计算属性，向组件注入 CSS Modules 局部对象。然后你就可以在模板中通过一个动态类绑定来使用它了。</p></blockquote><div class="language-vue ext-vue line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;"> :</span><span style="color:#79C0FF;">class</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;</span><span style="color:#C9D1D9;">$style.red</span><span style="color:#A5D6FF;">&quot;</span><span style="color:#C9D1D9;">&gt;This should be red&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">style</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#79C0FF;">.red</span><span style="color:#C9D1D9;"> {</span></span>\n<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">color</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">red</span><span style="color:#C9D1D9;">;</span></span>\n<span class="line"><span style="color:#C9D1D9;">}</span></span>\n<span class="line"><span style="color:#79C0FF;">.bold</span><span style="color:#C9D1D9;"> {</span></span>\n<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">font-weight</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">bold</span><span style="color:#C9D1D9;">;</span></span>\n<span class="line"><span style="color:#C9D1D9;">}</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">style</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',42),L=(0,l.Uk)("详细原理查看官方文档"),$={href:"https://vue-loader.vuejs.org/zh/guide/css-modules.html#css-modules",target:"_blank",rel:"noopener noreferrer"},O=(0,l.Uk)("vue-loader"),V=(0,l.uE)('<ul><li>使用预处理器样</li></ul><blockquote><p>如果你的样式是从 JavaScript 中导入的，那么你只需要将把文件命名为<code>*.module.(less|scss|css)</code>。</p></blockquote><div class="language-vue ext-vue line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;"> :</span><span style="color:#79C0FF;">class</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;</span><span style="color:#C9D1D9;">styles.module</span><span style="color:#A5D6FF;">&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">    对于外部样式文件，框架默认支持以文件命名: xxx.module.(less|scss|css)</span></span>\n<span class="line"><span style="color:#C9D1D9;">    开启使用css module</span></span>\n<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> styles </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;./index.module.less&#39;</span></span>\n<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> {</span></span>\n<span class="line"><span style="color:#FFA657;">  </span><span style="color:#D2A8FF;">data</span><span style="color:#FFA657;">() </span><span style="color:#C9D1D9;">{</span></span>\n<span class="line"><span style="color:#C9D1D9;">    styles</span></span>\n<span class="line"><span style="color:#C9D1D9;">  }</span><span style="color:#FFA657;">,</span></span>\n<span class="line"><span style="color:#FFA657;">}</span></span>\n<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="_13、案例" tabindex="-1"><a class="header-anchor" href="#_13、案例" aria-hidden="true">#</a> 13、案例</h2>',4),N={href:"https://github.com/Umajs/umajs-vue-ssr/tree/main/web/pages/css",target:"_blank",rel:"noopener noreferrer"},I=(0,l.Uk)("css-module"),J={href:"https://github.com/Umajs/umajs-vue-ssr/tree/main/web/pages/vuex",target:"_blank",rel:"noopener noreferrer"},Y=(0,l.Uk)("vuex"),Z={href:"https://github.com/Umajs/umajs-vue-ssr/tree/main/web/pages/router",target:"_blank",rel:"noopener noreferrer"},G=(0,l.Uk)("vue-router"),K={href:"https://github.com/Umajs/umajs-vue-ssr/tree/main/web/pages/element",target:"_blank",rel:"noopener noreferrer"},Q=(0,l.Uk)("elementUI"),X={href:"https://github.com/Umajs/umajs-vue-ssr/tree/main/web/pages/andv",target:"_blank",rel:"noopener noreferrer"},ss=(0,l.Uk)("ant-design-vue"),ns=(0,l._)("h2",{id:"_14、源码",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#_14、源码","aria-hidden":"true"},"#"),(0,l.Uk)(" 14、源码")],-1),as={href:"https://github.com/dazjean/srejs",target:"_blank",rel:"noopener noreferrer"},ls=(0,l.Uk)("@srejs/vue"),ps={href:"https://github.com/Umajs/plugin-vue-ssr",target:"_blank",rel:"noopener noreferrer"},es=(0,l.Uk)("@umajs/plugin-vue-ssr"),os=(0,l._)("p",null,[(0,l._)("strong",null,"如果你觉得有用，请 star 支持下我们~谢谢！")],-1),rs={},cs=(0,a(4110).Z)(rs,[["render",function(s,n){const a=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.iD)(l.HY,null,[p,(0,l._)("blockquote",null,[(0,l._)("p",null,[e,o,(0,l._)("a",r,[c,(0,l.Wm)(a)]),t,(0,l._)("a",i,[D,(0,l.Wm)(a)]),y,u,b,d,F,m,C,h,g])]),v,(0,l._)("blockquote",null,[(0,l._)("p",null,[A,E,x,(0,l._)("a",k,[_,(0,l.Wm)(a)])])]),f,(0,l._)("p",null,[(0,l._)("strong",null,[B,(0,l._)("a",q,[j,(0,l.Wm)(a)])])]),U,(0,l._)("p",null,[w,S,(0,l._)("a",P,[M,(0,l.Wm)(a)]),R,(0,l._)("a",T,[z,(0,l.Wm)(a)]),W]),H,(0,l._)("p",null,[(0,l._)("strong",null,[L,(0,l._)("a",$,[O,(0,l.Wm)(a)])])]),V,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",N,[I,(0,l.Wm)(a)])]),(0,l._)("li",null,[(0,l._)("a",J,[Y,(0,l.Wm)(a)])]),(0,l._)("li",null,[(0,l._)("a",Z,[G,(0,l.Wm)(a)])]),(0,l._)("li",null,[(0,l._)("a",K,[Q,(0,l.Wm)(a)])]),(0,l._)("li",null,[(0,l._)("a",X,[ss,(0,l.Wm)(a)])])]),ns,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",as,[ls,(0,l.Wm)(a)])]),(0,l._)("li",null,[(0,l._)("a",ps,[es,(0,l.Wm)(a)])])]),os],64)}]])},1142:(s,n,a)=>{a.r(n),a.d(n,{data:()=>l});const l={key:"v-f599b738",path:"/ssr/Vue-ssr.html",title:"vue-ssr",lang:"zh-CN",frontmatter:{head:[["meta",{property:"og:url",content:"/v2/ssr/Vue-ssr.html"}],["meta",{property:"og:site_name",content:"UMajs"}],["meta",{property:"og:title",content:"vue-ssr"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{property:"og:locale:alternate",content:"en-US"}],["meta",{name:"twitter:card",content:"summary_large_image"}],["meta",{name:"twitter:image:alt",content:"UMajs"}],["meta",{property:"article:author",content:"wuba"}],["meta",{property:"og:restrictions:age",content:"3+"}]]},excerpt:"",headers:[{level:2,title:"1、插件介绍",slug:"_1、插件介绍",children:[]},{level:2,title:"2、特性",slug:"_2、特性",children:[]},{level:2,title:"3、脚手架快速初始化项目[推荐]",slug:"_3、脚手架快速初始化项目-推荐",children:[]},{level:2,title:"4、手动安装集成插件",slug:"_4、手动安装集成插件",children:[{level:3,title:"插件安装",slug:"插件安装",children:[]},{level:3,title:"插件配置",slug:"插件配置",children:[]},{level:3,title:"目录结构",slug:"目录结构",children:[]},{level:3,title:"页面组件(App.vue)",slug:"页面组件-app-vue",children:[]},{level:3,title:"页面主入口文件(index.js)",slug:"页面主入口文件-index-js",children:[]}]},{level:2,title:"5、插件使用",slug:"_5、插件使用",children:[]},{level:2,title:"6、插件 API",slug:"_6、插件-api",children:[]},{level:2,title:"7、数据获取",slug:"_7、数据获取",children:[{level:3,title:"服务端直出 Props",slug:"服务端直出-props",children:[]},{level:3,title:"服务端初直出 State",slug:"服务端初直出-state",children:[]},{level:3,title:"asyncData 静态方法",slug:"asyncdata-静态方法",children:[]}]},{level:2,title:"8、SEO 和 HTML",slug:"_8、seo-和-html",children:[{level:3,title:"自定义 html",slug:"自定义-html",children:[]},{level:3,title:"模板插值",slug:"模板插值",children:[]},{level:3,title:"支持全局 HTML",slug:"支持全局-html",children:[]}]},{level:2,title:"9、vuex",slug:"_9、vuex",children:[{level:3,title:"服务端初始化 state",slug:"服务端初始化-state",children:[]},{level:3,title:"页面组件获取状态",slug:"页面组件获取状态",children:[]}]},{level:2,title:"10、vue-router",slug:"_10、vue-router",children:[]},{level:2,title:"11、内置 css 支持",slug:"_11、内置-css-支持",children:[{level:3,title:"Scoped CSS",slug:"scoped-css",children:[]},{level:3,title:"预处理器 less/scss",slug:"预处理器-less-scss",children:[]}]},{level:2,title:"12、CSS Modules",slug:"_12、css-modules",children:[]},{level:2,title:"13、案例",slug:"_13、案例",children:[]},{level:2,title:"14、源码",slug:"_14、源码",children:[]}],filePathRelative:"ssr/Vue-ssr.md",git:{updatedTime:1634816476e3,contributors:[{name:"BubbleM",email:"bubblelm@163.com",commits:1}]}}},4110:(s,n)=>{n.Z=(s,n)=>{for(const[a,l]of n)s[a]=l;return s}}}]);